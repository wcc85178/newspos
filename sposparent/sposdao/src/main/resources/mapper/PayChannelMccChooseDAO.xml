<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shiyi.sposdao.dao.PayChannelMccChooseDAO">
  <resultMap id="BaseResultMap" type="com.shiyi.sposdao.entity.PayChannelMccChoose">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="start_time" jdbcType="INTEGER" property="startTime" />
    <result column="end_time" jdbcType="INTEGER" property="endTime" />
    <result column="main_mcc" jdbcType="VARCHAR" property="mainMcc" />
    <result column="backup_mcc" jdbcType="VARCHAR" property="backupMcc" />
    <result column="backup_not_mcc" jdbcType="VARCHAR" property="backupNotMcc" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, start_time, end_time, main_mcc, backup_mcc, backup_not_mcc, flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_channel_mcc_choose
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pay_channel_mcc_choose
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shiyi.sposdao.entity.PayChannelMccChoose">
    insert into pay_channel_mcc_choose (id, start_time, end_time, 
      main_mcc, backup_mcc, backup_not_mcc, 
      flag)
    values (#{id,jdbcType=INTEGER}, #{startTime,jdbcType=INTEGER}, #{endTime,jdbcType=INTEGER}, 
      #{mainMcc,jdbcType=VARCHAR}, #{backupMcc,jdbcType=VARCHAR}, #{backupNotMcc,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shiyi.sposdao.entity.PayChannelMccChoose">
    insert into pay_channel_mcc_choose
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="mainMcc != null">
        main_mcc,
      </if>
      <if test="backupMcc != null">
        backup_mcc,
      </if>
      <if test="backupNotMcc != null">
        backup_not_mcc,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=INTEGER},
      </if>
      <if test="mainMcc != null">
        #{mainMcc,jdbcType=VARCHAR},
      </if>
      <if test="backupMcc != null">
        #{backupMcc,jdbcType=VARCHAR},
      </if>
      <if test="backupNotMcc != null">
        #{backupNotMcc,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shiyi.sposdao.entity.PayChannelMccChoose">
    update pay_channel_mcc_choose
    <set>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=INTEGER},
      </if>
      <if test="mainMcc != null">
        main_mcc = #{mainMcc,jdbcType=VARCHAR},
      </if>
      <if test="backupMcc != null">
        backup_mcc = #{backupMcc,jdbcType=VARCHAR},
      </if>
      <if test="backupNotMcc != null">
        backup_not_mcc = #{backupNotMcc,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shiyi.sposdao.entity.PayChannelMccChoose">
    update pay_channel_mcc_choose
    set start_time = #{startTime,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=INTEGER},
      main_mcc = #{mainMcc,jdbcType=VARCHAR},
      backup_mcc = #{backupMcc,jdbcType=VARCHAR},
      backup_not_mcc = #{backupNotMcc,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>